# PFS Server Configuration File

server:
  address: ":8080"
  log_level: info # Options: debug, info, warn, error

# ============================================================================
# Plugin Configurations
# ============================================================================
# Plugins can be defined as:
# 1. Single instance: { enabled, path, config }
# 2. Multiple instances: array of { name, enabled, path, config }

plugins:
  serverinfofs:
    enabled: true
    path: /serverinfofs
    config:
      version: "1.0.0"

  memfs:
    enabled: true
    path: /memfs
    config:
      init_dirs:
        - /home
        - /tmp

  queuefs:
    enabled: true
    path: /queuefs
    config: {}

  kvfs:
    enabled: true
    path: /kvfs
    config:
      initial_data:
        welcome: "Hello from VFS Server!"
        version: "1.0.0"

  hellofs:
    enabled: true
    path: /hellofs

  streamfs:
    enabled: true
    path: /streamfs

  # ============================================================================
  # LocalFS - Local File System Mount
  # ============================================================================
  localfs:
    enabled: true
    path: /local/tmp
    config:
      local_dir: /tmp # Path to the local directory to mount

  # Example: Multiple local mounts (uncomment to use)
  # localfs_home:
  #   enabled: false
  #   path: /home
  #   config:
  #     local_dir: /Users/username  # Mount home directory

  # localfs_data:
  #   enabled: false
  #   path: /data
  #   config:
  #     local_dir: /var/data  # Mount data directory

  # ============================================================================
  # SQLFS - Database-backed File System (Multiple Instances)
  # ============================================================================
  sqlfs:
    # SQLite instance for local development
    - name: local
      enabled: true
      path: /sqlfs
      config:
        backend: sqlite
        db_path: sqlfs.db
        cache_enabled: true
        cache_max_size: 1000
        cache_ttl_seconds: 5

    # TiDB instance for production (disabled by default)
    - name: tidb
      enabled: true
      path: /sqlfs_tidb
      config:
        backend: tidb
        dsn: "xxx:yyy@tcp(zzz:4000)/sqlfs?charset=utf8mb4&parseTime=True&tls=tidb"
        cache_enabled: true
        cache_max_size: 1000
        cache_ttl_seconds: 5

  # ============================================================================
  # ProxyFS - Remote PFS Proxy (Multiple Instances)
  # ============================================================================
  proxyfs:
    # Remote server 1 (disabled by default)
    - name: remote1
      enabled: false
      path: /proxyfs/remote1
      config:
        base_url: "http://localhost:9090/api/v1"

    # Remote server 2 (disabled by default)
    - name: remote2
      enabled: false
      path: /proxyfs/remote2
      config:
        base_url: "http://another-server:8080/api/v1"

  s3fs:
    - name: aws
      enabled: true
      path: /s3fs/aws
      config:
        region: us-west-1
        bucket: bucket-name
        access_key_id: key_id
        secret_access_key: secret
        prefix: pfs/ # Optional: all keys will be prefixed with "pfs/"

# ============================================================================
# File System Structure
# ============================================================================
# With current enabled plugins:
# /
# ├── serverinfofs/  (server information)
# ├── memfs/         (in-memory filesystem)
# ├── queuefs/       (message queue)
# ├── kvfs/          (key-value store)
# ├── hellofs/       (hello world plugin)
# ├── streamfs/      (streaming data)
# └── sqlfs/         (database-backed filesystem - SQLite)
#
# If additional instances are enabled:
# ├── local/         (local file system mount)
# ├── sqlfs_tidb/    (database-backed filesystem - TiDB)
# ├── s3fs/
# │   └── aws/       (AWS S3 storage)
# └── proxyfs/
#     ├── remote1/   (remote PFS server 1)
#     └── remote2/   (remote PFS server 2)

# ============================================================================
# Usage Examples
# ============================================================================
#
# Access local plugins:
#   pfs ls /memfs
#   pfs cat /streamfs/video
#   pfs write /sqlfs/data/config.txt "data"
#
# Access local file system (when enabled):
#   pfs ls /local
#   pfs cat /local/file.txt
#   pfs write /local/newfile.txt "content"
#
# Access remote endpoints (when enabled):
#   pfs ls /proxyfs/remote1
#   pfs cat /proxyfs/remote1/hello.txt
#
# Access S3 storage (when enabled):
#   pfs ls /s3fs/aws
#   pfs write /s3fs/aws/data.txt "cloud data"
#
# Multiple SQLFS instances (when enabled):
#   pfs write /sqlfs/local-data.txt "local"
#   pfs write /sqlfs_tidb/prod-data.txt "production"
